1.内容回顾
    1.常用字段和参数
        1.AutoField(primary_key=True)
        2.CharField(max_length=12)

        3.IntegerField()
           ...很多
        4.DecimalField(max_digits=5,decimal_places=2)

        5.DateTimeField()
        6.DateField()
        7.TimeField()

        8.UUIDField()
        9.GenericIPAddressField()

        10.ImageField()
        11.URLField()
        12.FilePathField()

    2.字段常用参数
        1.null = True
        2.default = '默认值'
        3.unique = True
        4.primary_key = True
        CharField
        5.max_length=12
        时间字段
        6.auto_now = True           --> 自动把最后更新的时候保存
        7.auto_now_add = True       --> 自动把创建时间保存

        8.db_index = True           --> 在数据库中给当前字段创建索引
        9.db_column = '字段名'       --> 不用默认类中的属性作为字段名

        10.choice = ((1,'男'))

    2.必知必会13条
        1.返回QuerySet列表类型的
                1.filter()
                2.all()
                3.exclude()
                4.order_by()
                5.reverse()
                6.distinct()

                7.values()              --> [{},{}]
                8.values_list()         --> [(),()]

            2.返回具体对象
                1.get()
                2.first()
                3.last()
            3.返回布尔值
                1.exists()
            4.返回数字的
                1.count()

2.今日内容
    1.ORM表与表之间的关系
        1.一对多           -->外键(ForeignKey)
        2.多对多           -->另外一张关系表(ManyToManyField)
            1.三种方式
                1.自己建立第三张关系表，外键分别关两个表
                    1.优点
                    2.缺点
                        1.自己做连表查询
                2.通过ORM内置的ManyToManyField，自动常见第三张关系表
                    1.优点
                        1.提供了很多连表操作的快捷方法  --> all() add() set() clear() remove()
                    2.缺点
                        1.无法扩展第三张表
                3.自己创建第三张关系表，通过ManyToManyField关联
                    1.优点
                        1.既能够使用多对多查询的快捷方式all(),还能够自己扩展第三张关系表的字段
            2.以后用那种？
                1.当第三张关系表不需要其他额外字段的时候，我们就用默认ManyToManyField就可以了
                2.当第三张关系表需要额外字段的时候，我们就用就要用第三种方式，自己创建第三张关系表并且用ManyToManyField关联
        3.一对一
            1.当一张表里的字段非常多，并且某几个字段的查询频率远远大于其他字段的时候
            2.把常用字段单独拆成一张表，查询的时候更快捷
    2.ORM
        1.基于对象的查询
            1.正向查
                对象.关联字段
            2.反向查
                1.默认不设置related_name属性
                    1.查找对象是多个的时候（一对多或多对多时）
                        publisher_obj.book_set.all()
                    2.查找的对象时一个的时候（一对一）
                        author_info_obj.author.name
                2.设置related_name=‘books'属性
                    publisher_obj.books.all()

        2.基于queryset的查询
            1.正向查
                Book.objects.filter(id=1).values_list('publisher__name')
            2.反向查
                1.默认不设置related_name属性,默认就用类名的小写
                    publisher.object.filter(id=1).values_list('book__price')
                2.设置related_name=‘books'属性
                    publisher.object.filter(id=1).values_list('books__price')