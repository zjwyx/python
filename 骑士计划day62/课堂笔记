1.内容回顾
    1.web框架模式
        1.MVC      -->MVVM
        2.MTV(Django)
    2.模板语言（Django HTML页面字符串替换的规则）
        1.语法
            {{}}  {%  %}
        2.变量，操作
            1.字典的key
            2.属性 方法
            3.索引
        3.filter（对变量做操作，返回的是要替换到页面上的值）
            0.语法
                1.{{ 变量|filter_name }}
                2.{{ 变量|filter_name:'变量' }}
            1.常用的内置filter
                1.length
                2.default
                3.filesizeformat
                4.slice
                5.cut
                6.date(注意格式化的符号和python中不一样) *****
                    eq:{{now|date:'Y-m-d H:i:s w'}}
                7.truncatechars/truncatewords
                8.join
                9.safe    *****标签语义化
                10.timesince/timeuntil
            2.自定义filter
                1.如何自定义
                    1.在app下面新建一个python package，包名必须叫templatetags
                    2.在包里面新建一个py文件（模块）
                    3.在py文件中新建一个函数
                    4.把函数注册上
                        from django import template
                        register = template.Library()

                        @register.filter()
                        def sb():
                            return ...
                2.如何使用？
                    {{% load 模块名 %}}
                    {{ 变量|自定义filter_name:'参数' }}
            3.tags(模板语言中定义的一些逻辑相关的语句)
                1.for循环（有始有终）
                    {% for xx in xxx %}
                        {{forloop.counter}}
                        {{forloop.counter0}}
                        {{forloop.revcounter}}
                        {{forloop.revcounter0}}

                        {{forloop.first}}
                        {{forloop.last}}

                        {{forloop.parentloop}}
                    {% endfor %}

                    {% for xx in xxx %}
                        当xxx有内容的时候执行这个语句块
                    {{empty}}
                        当xxx没有内容的时候执行这个语句块
                    {% endfor %}

                2.if判断
                    {% if 条件 %}
                    {% else %}
                    {% endif %}

                    {% if 条件 %}
                        ...
                    {% elif 条件2 %}
                        ...
                    {% endif %}

                3.with语句
                    {% with xxx as xx %}
                    {% endwith %}
                4.csrf_token
                    防止请求网站伪造

    3.作业
        1.自定义filter实现显示时间的功能

        2.dateutil模块
            1.pip install python-dateutil



2.今日内容
    1.母版
        1.什么情况下使用母版？
            当多个页面大大部分内容都一样的时候，我们可以把相同的部分提取出来，放到一个单独的母版文件中
        2.使用
            1.在母版中需要被替换的block
            2.在子页面中
                1.先继承母版   --> {% extends '母版.html' %}
                2.定义block
                    {% block page_main %}
                    {% endblock page_main %}
                3.通常的用法
                    1.{% block page_css %}  {% endblock %}
                    2.{% block page_js %}    {% endblock %}
    2.组件
        1.什么情况下使用组件
            页面上相对独立的某个部分可以单独拿出来放到一个单独的html文件中
        2.如何使用
            1.{% include ‘组件名.html’ %}
        3.静态文件相关
            1.为什么要用？
                1.把静态文件的路径改成动态拼接的，避免在HTML页面中硬编码静态文件的导入路径
            2.如何使用？
                1.{% load static %} {% static ‘css/xx.css’ %}
                1.{% load get_static_prefix %} {% get_static_prefix  %}‘css/xx.css’
        4.自定义tag
            1.自定义tag比自定义filter功能更强大一点

            {% wrc 1 2 %}

3.今日作业
    1.用今天上课讲的母版和继承把自己给之前写的图书管理系统改一下
    2.simple_tag 和 inclusion_tag例子自己敲一遍

4.周末作业
    1.班级管理系统
        1.表结构
            1.班级
            2.学生
            3.老师
            4.班级和学生是一对多的关系；班级和老师的是多对多的关系
        2.三大部分
            1.班级的增删改查
            2.学生的增删改查(学生所属的班级要展示出来)
            3.老师的增删改查(老师带的班级展示出来)
    2.写完自己复习
